local lib = {}

function lib:YunaRemake(title)
    local existingUI = game:GetService("CoreGui"):FindFirstChild("Yuna")
    if existingUI then
        existingUI:Destroy()
        wait(1)
    end

	local UI = Instance.new("ScreenGui")
	local Window_1 = Instance.new("Frame")
	local TabHolder_1 = Instance.new("Frame")
	local UICorner_1 = Instance.new("UICorner")
	local UIGradient_1 = Instance.new("UIGradient")
	local UIStroke_1 = Instance.new("UIStroke")
	local UIGradient_2 = Instance.new("UIGradient")
	local Navigation_1 = Instance.new("ScrollingFrame")
	local UIListLayout_1 = Instance.new("UIListLayout")
	local TopBar_1 = Instance.new("Frame")
	local UICorner_4 = Instance.new("UICorner")
	local Title_3 = Instance.new("TextLabel")
	local ExitButton_1 = Instance.new("ImageButton")
	local UIAspectRatioConstraint_3 = Instance.new("UIAspectRatioConstraint")
	local Content_1 = Instance.new("Frame")
	local UIGradient_7 = Instance.new("UIGradient")
	local UICorner_5 = Instance.new("UICorner")
	local UIPadding_1 = Instance.new("UIPadding")
	
	UI.Name = "yunauiremadebyzac"
	UI.Parent = game:GetService("CoreGui")
	UI.DisplayOrder = 999999999
	UI.ResetOnSpawn = false

	function isMobile()
        return game:GetService("UserInputService").TouchEnabled and not game:GetService("UserInputService").KeyboardEnabled
	end

	Window_1.Name = "Window"
	Window_1.Parent = UI
	Window_1.BackgroundColor3 = Color3.fromRGB(255,255,255)
	Window_1.BackgroundTransparency = 1
	Window_1.BorderColor3 = Color3.fromRGB(0,0,0)
	Window_1.BorderSizePixel = 0
	Window_1.Position = UDim2.new(0, 148,0, 67)
	Window_1.Size = UDim2.new(0, 654,0, 374)
	Window_1.ZIndex = 0

	if isMobile() then
		Window_1.Position = UDim2.new(0, 7, 0, 0)
	else
		Window_1.Position = UDim2.new(0, 425, 0, 150)
	end

	TabHolder_1.Name = "TabHolder"
	TabHolder_1.Parent = Window_1
	TabHolder_1.BackgroundColor3 = Color3.fromRGB(153,153,153)
	TabHolder_1.BorderColor3 = Color3.fromRGB(0,0,0)
	TabHolder_1.BorderSizePixel = 0
	TabHolder_1.Position = UDim2.new(-0.00206349371, 0,0.000218763715, 0)
	TabHolder_1.Size = UDim2.new(0, 146,0, 374)

	UICorner_1.Parent = TabHolder_1
	UICorner_1.CornerRadius = UDim.new(0,10)

	UIGradient_1.Parent = TabHolder_1
	UIGradient_1.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(18, 18, 20)), ColorSequenceKeypoint.new(1, Color3.fromRGB(71, 64, 148))}
	UIGradient_1.Offset = Vector2.new(0, 0.699999988)
	UIGradient_1.Rotation = 90

	UIStroke_1.Parent = TabHolder_1
	UIStroke_1.Color = Color3.fromRGB(255,255,255)
	UIStroke_1.Thickness = 2

	UIGradient_2.Parent = UIStroke_1
	UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(18, 18, 20)), ColorSequenceKeypoint.new(1, Color3.fromRGB(71, 64, 148))}
	UIGradient_2.Offset = Vector2.new(0, 0.699999988)
	UIGradient_2.Rotation = 90

	Navigation_1.Name = "Navigation"
	Navigation_1.Parent = TabHolder_1
	Navigation_1.Active = true
	Navigation_1.BackgroundColor3 = Color3.fromRGB(255,255,255)
	Navigation_1.BackgroundTransparency = 1
	Navigation_1.BorderColor3 = Color3.fromRGB(0,0,0)
	Navigation_1.BorderSizePixel = 0
	Navigation_1.Position = UDim2.new(-0.0101485578, 0,0.00268036546, 0)
	Navigation_1.Size = UDim2.new(0, 146,0, 374)
	Navigation_1.ClipsDescendants = true
	Navigation_1.AutomaticCanvasSize = Enum.AutomaticSize.None
	Navigation_1.BottomImage = "rbxasset://textures/ui/Scroll/scroll-bottom.png"
	Navigation_1.CanvasPosition = Vector2.new(0, 0)
	Navigation_1.CanvasSize = UDim2.new(0, 0,5, 0)
	Navigation_1.ElasticBehavior = Enum.ElasticBehavior.WhenScrollable
	Navigation_1.HorizontalScrollBarInset = Enum.ScrollBarInset.None
	Navigation_1.MidImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
	Navigation_1.ScrollBarImageColor3 = Color3.fromRGB(0,0,0)
	Navigation_1.ScrollBarImageTransparency = 0
	Navigation_1.ScrollBarThickness = 0
	Navigation_1.ScrollingDirection = Enum.ScrollingDirection.XY
	Navigation_1.ScrollingEnabled = false
	Navigation_1.TopImage = "rbxasset://textures/ui/Scroll/scroll-top.png"
	Navigation_1.VerticalScrollBarInset = Enum.ScrollBarInset.None
	Navigation_1.VerticalScrollBarPosition = Enum.VerticalScrollBarPosition.Right

	UIListLayout_1.Parent = Navigation_1
	UIListLayout_1.Padding = UDim.new(0,12)
	UIListLayout_1.HorizontalAlignment = Enum.HorizontalAlignment.Center
	UIListLayout_1.SortOrder = Enum.SortOrder.LayoutOrder
	
	TopBar_1.Name = "TopBar"
	TopBar_1.Parent = Window_1
	TopBar_1.BackgroundColor3 = Color3.fromRGB(18,18,20)
	TopBar_1.BorderColor3 = Color3.fromRGB(0,0,0)
	TopBar_1.BorderSizePixel = 0
	TopBar_1.Position = UDim2.new(0.259938836, 0,0, 0)
	TopBar_1.Size = UDim2.new(0, 484,0, 42)

	UICorner_4.Parent = TopBar_1

	Title_3.Name = "Title"
	Title_3.Parent = TopBar_1
	Title_3.BackgroundColor3 = Color3.fromRGB(255,255,255)
	Title_3.BackgroundTransparency = 1
	Title_3.BorderColor3 = Color3.fromRGB(0,0,0)
	Title_3.BorderSizePixel = 0
	Title_3.Size = UDim2.new(0, 484,0, 42)
	Title_3.Font = Enum.Font.GothamBold
	Title_3.Text = title
	Title_3.TextColor3 = Color3.fromRGB(71, 64, 148)
	Title_3.TextSize = 17

	ExitButton_1.Name = "ExitButton"
	ExitButton_1.Parent = TopBar_1
	ExitButton_1.Active = true
	ExitButton_1.BackgroundColor3 = Color3.fromRGB(255,255,255)
	ExitButton_1.BackgroundTransparency = 1
	ExitButton_1.BorderColor3 = Color3.fromRGB(0,0,0)
	ExitButton_1.BorderSizePixel = 0
	ExitButton_1.Position = UDim2.new(0.929752052, 0,0.190476194, 0)
	ExitButton_1.Size = UDim2.new(0, 25,0, 31)
	ExitButton_1.Image = "rbxassetid://10734895530"
	ExitButton_1.ImageTransparency = 0.800000011920929
	
	ExitButton_1.MouseButton1Click:Connect(function()
		Window_1.Visible = false
	end)
	
	ExitButton_1.TouchTap:Connect(function()
		Window_1.Visible = false
	end)

	UIAspectRatioConstraint_3.Parent = ExitButton_1

	Content_1.Name = "Content"
	Content_1.Parent = Window_1
	Content_1.BackgroundColor3 = Color3.fromRGB(255,255,255)
	Content_1.BorderColor3 = Color3.fromRGB(0,0,0)
	Content_1.BorderSizePixel = 0
	Content_1.Position = UDim2.new(0.259938836, 0,0.14438498, 0)
	Content_1.Size = UDim2.new(0, 484,0, 320)
	Content_1.ZIndex = 0

	UIGradient_7.Parent = Content_1
	UIGradient_7.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(18, 18, 20)), ColorSequenceKeypoint.new(1, Color3.fromRGB(71, 64, 148))}
	UIGradient_7.Offset = Vector2.new(0, 0.800000012)
	UIGradient_7.Rotation = 90

	UICorner_5.Parent = Content_1
	
	UIPadding_1.Parent = Navigation_1
	UIPadding_1.PaddingTop = UDim.new(0,12)
	
	local TweenService = game:GetService("TweenService")
	local UserInputService = game:GetService("UserInputService")

	local dragging
	local dragInput
	local dragStart
	local startPos

	local tweenInfo = TweenInfo.new(0.16, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)

	local function update(input)
		local delta = input.Position - dragStart
		local targetPos = UDim2.new(
			startPos.X.Scale, 
			startPos.X.Offset + delta.X, 
			startPos.Y.Scale, 
			startPos.Y.Offset + delta.Y
		)

		local tween = TweenService:Create(Window_1, tweenInfo, {Position = targetPos})
		tween:Play()
	end

	Window_1.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = Window_1.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	Window_1.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)

	local function toggleMainVisibility(input)
		if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.LeftControl then
			Window_1.Visible = not Window_1.Visible
		end
	end

	UserInputService.InputBegan:Connect(function(input, gameProcessed)
		if not gameProcessed then
			toggleMainVisibility(input)
		end
	end)
	
	function lib:CreateTab(title, id)
		local Tab = Instance.new("ImageButton")
		local UIGradient_5 = Instance.new("UIGradient")
		local UICorner_3 = Instance.new("UICorner")
		local UIStroke_3 = Instance.new("UIStroke")
		local UIGradient_6 = Instance.new("UIGradient")
		local Title = Instance.new("TextLabel")
		local Icon_2 = Instance.new("ImageLabel")
		local UIAspectRatioConstraint_2 = Instance.new("UIAspectRatioConstraint")
		local Items = Instance.new("ScrollingFrame")
		local UIListLayout_2 = Instance.new("UIListLayout")
		local UIPadding_2 = Instance.new("UIPadding")

		Tab.Name = "Tab"
		Tab.Parent = Navigation_1
		Tab.Active = true
		Tab.AutoButtonColor = false
		Tab.BackgroundColor3 = Color3.fromRGB(153, 153, 153)
		Tab.BackgroundTransparency = 1
		Tab.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Tab.BorderSizePixel = 0
		Tab.Position = UDim2.new(0.0445205495, 0, -0.000226732111, 0)
		Tab.Size = UDim2.new(0, 133, 0, 30)

		UIGradient_5.Parent = Tab
		UIGradient_5.Color = ColorSequence.new { ColorSequenceKeypoint.new(0, Color3.fromRGB(43, 43, 48)), ColorSequenceKeypoint.new(1, Color3.fromRGB(71, 64, 148)) }
		UIGradient_5.Offset = Vector2.new(0.200000003, 0)

		UICorner_3.Parent = Tab
		UICorner_3.CornerRadius = UDim.new(0, 6)

		UIStroke_3.Parent = Tab
		UIStroke_3.Color = Color3.fromRGB(255, 255, 255)
		UIStroke_3.Thickness = 1.399999976158142
		UIStroke_3.Transparency = 1

		UIGradient_6.Parent = UIStroke_3
		UIGradient_6.Color = ColorSequence.new { ColorSequenceKeypoint.new(0, Color3.fromRGB(18, 18, 20)), ColorSequenceKeypoint.new(1, Color3.fromRGB(71, 64, 148)) }
		UIGradient_6.Offset = Vector2.new(0.200000003, 0)

		Title.Name = "Title"
		Title.Parent = Tab
		Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Title.BackgroundTransparency = 1
		Title.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Title.BorderSizePixel = 0
		Title.Position = UDim2.new(0.0710390732, 0, -0.0237447098, 0)
		Title.Size = UDim2.new(0, 123, 0, 30)
		Title.Font = Enum.Font.Gotham
		Title.Text = title
		Title.TextColor3 = Color3.fromRGB(255, 255, 255)
		Title.TextSize = 15
		Title.TextTransparency = 0.6
		Title.TextXAlignment = Enum.TextXAlignment.Left

		Icon_2.Name = "Icon"
		Icon_2.Parent = Tab
		Icon_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Icon_2.BackgroundTransparency = 1
		Icon_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Icon_2.BorderSizePixel = 0
		Icon_2.Position = UDim2.new(0.781954646, 0, 0.174217224, 0)
		Icon_2.Size = UDim2.new(0, 22, 0, 19)
		Icon_2.Image = "rbxassetid://"..id
		Icon_2.ImageTransparency = 0.6

		UIAspectRatioConstraint_2.Parent = Icon_2

		Items.Name = title
		Items.Parent = Content_1
		Items.Active = true
		Items.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Items.BackgroundTransparency = 1
		Items.Position = UDim2.new(0, 0, 0, 0)
		Items.Size = UDim2.new(0, 484, 0, 320)
		Items.ClipsDescendants = true
		Items.AutomaticCanvasSize = Enum.AutomaticSize.None
		Items.ScrollBarThickness = 0
		Items.ScrollingDirection = Enum.ScrollingDirection.XY
		Items.Visible = false
		Items.ZIndex = 0
		Items.CanvasSize = UDim2.new(0, 0, 15, 0)

		UIListLayout_2.Parent = Items
		UIListLayout_2.Padding = UDim.new(0, 8)
		UIListLayout_2.HorizontalAlignment = Enum.HorizontalAlignment.Center
		UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder

		UIPadding_2.Parent = Items
		UIPadding_2.PaddingTop = UDim.new(0, 10)

		Tab.TouchTap:Connect(function()
			local tweenService = game:GetService("TweenService")
			local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quint, Enum.EasingDirection.Out)

			for _, otherTab in pairs(Navigation_1:GetChildren()) do
				if otherTab.Name == "Tab" then
					local otherUIStroke = otherTab:FindFirstChild("UIStroke")
					local otherTitle = otherTab:FindFirstChild("Title")

					if otherUIStroke then
						tweenService:Create(otherUIStroke, tweenInfo, {Transparency = 1}):Play()
					end
					if otherTitle then
						tweenService:Create(otherTitle, tweenInfo, {TextTransparency = 0.6}):Play()
					end
					tweenService:Create(otherTab, tweenInfo, {BackgroundTransparency = 1}):Play()

					local otherItems = Content_1:FindFirstChild(otherTab.Title.Text)
					if otherItems then
						tweenService:Create(otherItems, tweenInfo, {Size = UDim2.new(0, 60, 0, 320)}):Play()
						wait(0.3)
						otherItems.Visible = false
					end
				end
			end

			wait(0.3)
			tweenService:Create(Items, tweenInfo, {Size = UDim2.new(0, 484, 0, 320)}):Play()
			tweenService:Create(UIStroke_3, tweenInfo, {Transparency = 0}):Play()
			tweenService:Create(Title, tweenInfo, {TextTransparency = 0}):Play()
			tweenService:Create(Tab, tweenInfo, {BackgroundTransparency = 0}):Play()
			wait(0.3)
			tweenService:Create(Items, tweenInfo, {Size = UDim2.new(0, 60, 0, 320)}):Play()
			wait(0.3)
			tweenService:Create(Items, tweenInfo, {Size = UDim2.new(0, 484, 0, 320)}):Play()
			Items.Visible = true
		end)

		Tab.MouseButton1Click:Connect(function()
			local tweenService = game:GetService("TweenService")
			local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quint, Enum.EasingDirection.Out)

			for _, otherTab in pairs(Navigation_1:GetChildren()) do
				if otherTab.Name == "Tab" then
					local otherUIStroke = otherTab:FindFirstChild("UIStroke")
					local otherTitle = otherTab:FindFirstChild("Title")

					if otherUIStroke then
						tweenService:Create(otherUIStroke, tweenInfo, {Transparency = 1}):Play()
					end
					if otherTitle then
						tweenService:Create(otherTitle, tweenInfo, {TextTransparency = 0.6}):Play()
					end
					tweenService:Create(otherTab, tweenInfo, {BackgroundTransparency = 1}):Play()

					local otherItems = Content_1:FindFirstChild(otherTab.Title.Text)
					if otherItems then
						tweenService:Create(otherItems, tweenInfo, {Size = UDim2.new(0, 60, 0, 320)}):Play()
						wait(0.3)
						otherItems.Visible = false
					end
				end
			end

			wait(0.3)
			tweenService:Create(Items, tweenInfo, {Size = UDim2.new(0, 484, 0, 320)}):Play()
			tweenService:Create(UIStroke_3, tweenInfo, {Transparency = 0}):Play()
			tweenService:Create(Title, tweenInfo, {TextTransparency = 0}):Play()
			tweenService:Create(Tab, tweenInfo, {BackgroundTransparency = 0}):Play()
			wait(0.3)
			tweenService:Create(Items, tweenInfo, {Size = UDim2.new(0, 60, 0, 320)}):Play()
			wait(0.3)
			tweenService:Create(Items, tweenInfo, {Size = UDim2.new(0, 484, 0, 320)}):Play()
			Items.Visible = true
		end)

		return Items
	end
	
	function lib:CreateButton(title, TabParent, callback)
		local Button_1 = Instance.new("ImageButton")
		local UIStroke_4 = Instance.new("UIStroke")
		local UICorner_6 = Instance.new("UICorner")
		local Title_4 = Instance.new("TextLabel")
		local MouseIcon_1 = Instance.new("ImageLabel")
		local UIAspectRatioConstraint_4 = Instance.new("UIAspectRatioConstraint")
		
		Button_1.Name = "Button"
		Button_1.Parent = TabParent
		Button_1.Active = true
		Button_1.AutoButtonColor = false
		Button_1.BackgroundColor3 = Color3.fromRGB(24,24,26)
		Button_1.BorderColor3 = Color3.fromRGB(0,0,0)
		Button_1.BorderSizePixel = 0
		Button_1.Position = UDim2.new(0.0299586784, 0,0, 0)
		Button_1.Size = UDim2.new(0, 455,0, 37)
		Button_1.ZIndex = 0

		UIStroke_4.Parent = Button_1
		UIStroke_4.Color = Color3.fromRGB(42,41,44)
		UIStroke_4.Thickness = 1.100000023841858

		UICorner_6.Parent = Button_1
		UICorner_6.CornerRadius = UDim.new(0,4)

		Title_4.Name = "Title"
		Title_4.Parent = Button_1
		Title_4.BackgroundColor3 = Color3.fromRGB(255,255,255)
		Title_4.BackgroundTransparency = 1
		Title_4.BorderColor3 = Color3.fromRGB(0,0,0)
		Title_4.BorderSizePixel = 0
		Title_4.Position = UDim2.new(0.363346726, 0,0.00840058178, 0)
		Title_4.Size = UDim2.new(0, 123,0, 33)
		Title_4.Font = Enum.Font.Gotham
		Title_4.Text = title
		Title_4.TextColor3 = Color3.fromRGB(255,255,255)
		Title_4.TextSize = 14

		MouseIcon_1.Name = "MouseIcon"
		MouseIcon_1.Parent = Button_1
		MouseIcon_1.BackgroundColor3 = Color3.fromRGB(255,255,255)
		MouseIcon_1.BackgroundTransparency = 1
		MouseIcon_1.BorderColor3 = Color3.fromRGB(0,0,0)
		MouseIcon_1.BorderSizePixel = 0
		MouseIcon_1.Position = UDim2.new(0.934065938, 0,0.216216221, 0)
		MouseIcon_1.Size = UDim2.new(0, 22,0, 20)
		MouseIcon_1.Image = "http://www.roblox.com/asset/?id=12804017021"
		MouseIcon_1.ImageColor3 = Color3.fromRGB(71, 64, 148)

		UIAspectRatioConstraint_4.Parent = MouseIcon_1
		
		local function animateButton()
			UIGradient_8.Color = ColorSequence.new{
				ColorSequenceKeypoint.new(0, Color3.fromRGB(42, 41, 44)),
				ColorSequenceKeypoint.new(1, Color3.fromRGB(71, 64, 148))
			}
			task.wait(0.2)
			UIGradient_8.Color = ColorSequence.new{
				ColorSequenceKeypoint.new(0, Color3.fromRGB(42, 41, 44)),
				ColorSequenceKeypoint.new(1, Color3.fromRGB(42, 41, 44))
			}
		end

		Button_1.TouchTap:Connect(function()
			if callback then
				callback()
				animateButton()
			end
		end)

		Button_1.MouseButton1Click:Connect(function()
			if callback then
				callback()
				animateButton()
			end
		end)
	end
	
	function lib:CreateSection(title, TabParent)
		local Section_1 = Instance.new("Frame")
		local Line_1 = Instance.new("Frame")
		local UICorner_19 = Instance.new("UICorner")
		
		Section_1.Name = title
		Section_1.Parent = TabParent
		Section_1.BackgroundColor3 = Color3.fromRGB(255,255,255)
		Section_1.BackgroundTransparency = 1
		Section_1.BorderColor3 = Color3.fromRGB(0,0,0)
		Section_1.BorderSizePixel = 0
		Section_1.Position = UDim2.new(0.0299586784, 0,0.44193548, 0)
		Section_1.Size = UDim2.new(0, 425, 0, 18)

		Line_1.Name = "Line"
		Line_1.Parent = Section_1
		Line_1.BackgroundColor3 = Color3.fromRGB(42,41,44)
		Line_1.BorderColor3 = Color3.fromRGB(0,0,0)
		Line_1.BorderSizePixel = 0
		Line_1.Position = UDim2.new(0, 0,0.48, 0)
		Line_1.Size = UDim2.new(0, 425, 0, 2)

		UICorner_19.Parent = Line_1
	end
	
	local TweenService = game:GetService("TweenService")

	function lib:CreateToggle(title, TabParent, default, description, callback)
		local Toggle_1 = Instance.new("ImageButton")
		local UIStroke_14 = Instance.new("UIStroke")
		local UIGradient_11 = Instance.new("UIGradient")
		local UICorner_16 = Instance.new("UICorner")
		local ToggleTop_4 = Instance.new("Frame")
		local Title_8 = Instance.new("TextLabel")
		local Slide_4 = Instance.new("Frame")
		local UICorner_17 = Instance.new("UICorner")
		local UIStroke_15 = Instance.new("UIStroke")
		local Wheel_4 = Instance.new("Frame")
		local UICorner_18 = Instance.new("UICorner")
		local UIAspectRatioConstraint_8 = Instance.new("UIAspectRatioConstraint")
		local UIStroke_16 = Instance.new("UIStroke")
		local Description_4 = Instance.new("TextLabel")

		Toggle_1.Name = "Toggle"
		Toggle_1.Parent = TabParent
		Toggle_1.Active = true
		Toggle_1.AutoButtonColor = false
		Toggle_1.BackgroundColor3 = Color3.fromRGB(24, 24, 26)
		Toggle_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Toggle_1.BorderSizePixel = 0
		Toggle_1.Position = UDim2.new(0.0299586784, 0, 0.145161286, 0)
		Toggle_1.Size = UDim2.new(0, 455, 0, 37)
		Toggle_1.ZIndex = 0

		UIStroke_14.Parent = Toggle_1
		UIStroke_14.Color = Color3.fromRGB(255, 255, 255)
		UIStroke_14.Thickness = 1.1

		UIGradient_11.Parent = UIStroke_14
		UIGradient_11.Color = ColorSequence.new{ ColorSequenceKeypoint.new(0, Color3.fromRGB(42, 41, 44)), ColorSequenceKeypoint.new(1, Color3.fromRGB(42, 41, 44)) }
		UIGradient_11.Offset = Vector2.new(0.4, 0)

		UICorner_16.Parent = Toggle_1
		UICorner_16.CornerRadius = UDim.new(0, 4)

		ToggleTop_4.Name = "ToggleTop"
		ToggleTop_4.Parent = Toggle_1
		ToggleTop_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		ToggleTop_4.BackgroundTransparency = 1
		ToggleTop_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
		ToggleTop_4.BorderSizePixel = 0
		ToggleTop_4.Size = UDim2.new(0, 455, 0, 37)

		Title_8.Name = "Title"
		Title_8.Parent = ToggleTop_4
		Title_8.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Title_8.BackgroundTransparency = 1
		Title_8.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Title_8.BorderSizePixel = 0
		Title_8.Position = UDim2.new(0.029280778, 0, 0.116108254, 0)
		Title_8.Size = UDim2.new(0, 123, 0, 27)
		Title_8.Font = Enum.Font.Gotham
		Title_8.Text = title
		Title_8.TextColor3 = Color3.fromRGB(255, 255, 255)
		Title_8.TextSize = 14
		Title_8.TextTransparency = 0.6
		Title_8.TextXAlignment = Enum.TextXAlignment.Left

		Slide_4.Name = "Slide"
		Slide_4.Parent = ToggleTop_4
		Slide_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Slide_4.BackgroundTransparency = 1
		Slide_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Slide_4.BorderSizePixel = 0
		Slide_4.Position = UDim2.new(0.896703303, 0, 0.243243247, 0)
		Slide_4.Size = UDim2.new(0, 37, 0, 19)

		UICorner_17.Parent = Slide_4
		UICorner_17.CornerRadius = UDim.new(1, 0)

		UIStroke_15.Parent = Slide_4
		UIStroke_15.Color = Color3.fromRGB(42, 41, 44)
		UIStroke_15.Thickness = 1

		Wheel_4.Name = "Wheel"
		Wheel_4.Parent = Slide_4
		Wheel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Wheel_4.BackgroundTransparency = 1
		Wheel_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Wheel_4.BorderSizePixel = 0
		Wheel_4.Position = UDim2.new(0.11, 0, 0, 2)
		Wheel_4.Size = UDim2.new(0, 15, 0, 14)

		UICorner_18.Parent = Wheel_4
		UICorner_18.CornerRadius = UDim.new(1, 0)

		UIAspectRatioConstraint_8.Parent = Wheel_4

		UIStroke_16.Parent = Wheel_4
		UIStroke_16.Color = Color3.fromRGB(42, 41, 44)
		UIStroke_16.Thickness = 1

		Description_4.Name = "Description"
		Description_4.Parent = Toggle_1
		Description_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Description_4.BackgroundTransparency = 1
		Description_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Description_4.BorderSizePixel = 0
		Description_4.Position = UDim2.new(0.029280778, 0, 0.460235596, 0)
		Description_4.Size = UDim2.new(0, 441, 0, 36)
		Description_4.Font = Enum.Font.SourceSansItalic
		Description_4.Text = description
		Description_4.TextColor3 = Color3.fromRGB(255, 255, 255)
		Description_4.TextSize = 15
		Description_4.TextTransparency = 1
		Description_4.TextXAlignment = Enum.TextXAlignment.Left

		local toggleState = default

		local function updateToggle(state)
			if state then
				UIGradient_11.Color = ColorSequence.new{
					ColorSequenceKeypoint.new(0, Color3.fromRGB(42, 41, 44)),
					ColorSequenceKeypoint.new(1, Color3.fromRGB(71, 64, 148))
				}
				local tweenGoal = { Position = UDim2.new(0.540540516, 0, 0, 2) }
				local tweenInfo = TweenInfo.new(0.15, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut)
				local tween = TweenService:Create(Wheel_4, tweenInfo, tweenGoal)
				tween:Play()

				local tweenText = TweenService:Create(Title_8, tweenInfo, { TextTransparency = 0 })
				tweenText:Play()

				local tweenColor = TweenService:Create(UIStroke_15, tweenInfo, { Color = Color3.fromRGB(71, 64, 148) })
				tweenColor:Play()
				local tweenColor2 = TweenService:Create(UIStroke_16, tweenInfo, { Color = Color3.fromRGB(71, 64, 148) })
				tweenColor2:Play()
			else
				UIGradient_11.Color = ColorSequence.new{
					ColorSequenceKeypoint.new(0, Color3.fromRGB(42, 41, 44)),
					ColorSequenceKeypoint.new(1, Color3.fromRGB(42, 41, 44))
				}
				local tweenGoal = { Position = UDim2.new(0.11, 0, 0, 2) }
				local tweenInfo = TweenInfo.new(0.15, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut)
				local tween = TweenService:Create(Wheel_4, tweenInfo, tweenGoal)
				tween:Play()

				local tweenText = TweenService:Create(Title_8, tweenInfo, { TextTransparency = 0.6 })
				tweenText:Play()

				local tweenColor3 = TweenService:Create(UIStroke_15, tweenInfo, { Color = Color3.fromRGB(42, 41, 44) })
				tweenColor3:Play()
				local tweenColor4 = TweenService:Create(UIStroke_16, tweenInfo, { Color = Color3.fromRGB(42, 41, 44) })
				tweenColor4:Play()
			end
		end

		local function onHover(hovered)
			local sizeTweenGoal = hovered and { Size = UDim2.new(0, 455, 0, 68) } or { Size = UDim2.new(0, 455, 0, 37) }
			local textTransparencyGoal = hovered and { TextTransparency = 0.6 } or { TextTransparency = 1 }

			local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut)
			local tweenSize = TweenService:Create(Toggle_1, tweenInfo, sizeTweenGoal)
			local tweenTextTransparency = TweenService:Create(Description_4, tweenInfo, textTransparencyGoal)

			tweenSize:Play()
			tweenTextTransparency:Play()
		end

		Toggle_1.MouseEnter:Connect(function()
			onHover(true)
		end)

		Toggle_1.MouseLeave:Connect(function()
			onHover(false)
		end)

		updateToggle(toggleState)

		Toggle_1.MouseButton1Click:Connect(function()
			toggleState = not toggleState
			updateToggle(toggleState)

			if callback then
				callback(toggleState)
			end
		end)
		
		Toggle_1.TouchTap:Connect(function()
			toggleState = not toggleState
			updateToggle(toggleState)

			if callback then
				callback(toggleState)
			end
		end)
	end
	
	function lib:CreateSlider(title, TabParent, min, max, default, description, valueText, callback)
		local Slider_1 = Instance.new("ImageButton")
		local UIStroke_20 = Instance.new("UIStroke")
		local UIGradient_13 = Instance.new("UIGradient")
		local UICorner_24 = Instance.new("UICorner")
		local SliderTop_2 = Instance.new("Frame")
		local Title_10 = Instance.new("TextLabel")
		local SliderBack_2 = Instance.new("Frame")
		local UICorner_25 = Instance.new("UICorner")
		local UIStroke_21 = Instance.new("UIStroke")
		local Draggable_2 = Instance.new("Frame")
		local UICorner_26 = Instance.new("UICorner")
		local Handle_2 = Instance.new("Frame")
		local UIAspectRatioConstraint_10 = Instance.new("UIAspectRatioConstraint")
		local UICorner_27 = Instance.new("UICorner")
		local UIStroke_22 = Instance.new("UIStroke")
		local Value_2 = Instance.new("TextLabel")
		local Description_6 = Instance.new("TextLabel")

		Slider_1.Name = "Slider"
		Slider_1.Parent = TabParent
		Slider_1.Active = true
		Slider_1.AutoButtonColor = false
		Slider_1.BackgroundColor3 = Color3.fromRGB(24,24,26)
		Slider_1.BorderColor3 = Color3.fromRGB(0,0,0)
		Slider_1.BorderSizePixel = 0
		Slider_1.Position = UDim2.new(0.0299586784, 0, 0.145161286, 0)
		Slider_1.Size = UDim2.new(0, 455, 0, 37)
		Slider_1.ZIndex = 0

		UIStroke_20.Parent = Slider_1
		UIStroke_20.Color = Color3.fromRGB(255, 255, 255)
		UIStroke_20.Thickness = 1.1

		UIGradient_13.Parent = UIStroke_20
		UIGradient_13.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(42, 41, 44)), ColorSequenceKeypoint.new(1, Color3.fromRGB(42, 41, 44))}
		UIGradient_13.Offset = Vector2.new(0.4, 0)

		UICorner_24.Parent = Slider_1
		UICorner_24.CornerRadius = UDim.new(0, 4)

		SliderTop_2.Name = "SliderTop"
		SliderTop_2.Parent = Slider_1
		SliderTop_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		SliderTop_2.BackgroundTransparency = 1
		SliderTop_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
		SliderTop_2.BorderSizePixel = 0
		SliderTop_2.Size = UDim2.new(0, 455, 0, 37)

		Title_10.Name = "Title"
		Title_10.Parent = SliderTop_2
		Title_10.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Title_10.BackgroundTransparency = 1
		Title_10.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Title_10.BorderSizePixel = 0
		Title_10.Position = UDim2.new(0.029280778, 0, 0.116108254, 0)
		Title_10.Size = UDim2.new(0, 123, 0, 27)
		Title_10.Font = Enum.Font.Gotham
		Title_10.Text = title
		Title_10.TextColor3 = Color3.fromRGB(255, 255, 255)
		Title_10.TextSize = 14
		Title_10.TextTransparency = 0.6
		Title_10.TextXAlignment = Enum.TextXAlignment.Left

		SliderBack_2.Name = "SliderBack"
		SliderBack_2.Parent = SliderTop_2
		SliderBack_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		SliderBack_2.BackgroundTransparency = 1
		SliderBack_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
		SliderBack_2.BorderSizePixel = 0
		SliderBack_2.Position = UDim2.new(0.363000095, 0, 0.423999697, 0)
		SliderBack_2.Size = UDim2.new(0, 219, 0, 6)

		UICorner_25.Parent = SliderBack_2
		UICorner_25.CornerRadius = UDim.new(1, 0)

		UIStroke_21.Parent = SliderBack_2
		UIStroke_21.Color = Color3.fromRGB(41, 42, 44)
		UIStroke_21.Thickness = 1.1

		Draggable_2.Name = "Draggable"
		Draggable_2.Parent = SliderBack_2
		Draggable_2.BackgroundColor3 = Color3.fromRGB(71, 64, 148)
		Draggable_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Draggable_2.BorderSizePixel = 0
		Draggable_2.Size = UDim2.new(0, 100, 0, 6)

		UICorner_26.Parent = Draggable_2
		UICorner_26.CornerRadius = UDim.new(1, 0)

		Handle_2.Name = "Handle"
		Handle_2.Parent = Draggable_2
		Handle_2.BackgroundColor3 = Color3.fromRGB(81, 75, 144)
		Handle_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Handle_2.BorderSizePixel = 0
		Handle_2.Position = UDim2.new(0.98, 0, -0.3, 0)
		Handle_2.Size = UDim2.new(0, 9, 0, 12)

		UIAspectRatioConstraint_10.Parent = Handle_2
		UICorner_27.Parent = Handle_2
		UICorner_27.CornerRadius = UDim.new(1, 0)

		UIStroke_22.Parent = Handle_2
		UIStroke_22.Color = Color3.fromRGB(71, 64, 148)
		UIStroke_22.Thickness = 1

		Value_2.Name = "Value"
		Value_2.Parent = SliderTop_2
		Value_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Value_2.BackgroundTransparency = 1
		Value_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Value_2.BorderSizePixel = 0
		Value_2.Position = UDim2.new(0.849061012, 0, 0.116108663, 0)
		Value_2.Size = UDim2.new(0, 58, 0, 27)
		Value_2.Font = Enum.Font.SourceSansItalic
		Value_2.Text = default..valueText
		Value_2.TextColor3 = Color3.fromRGB(255, 255, 255)
		Value_2.TextSize = 17
		Value_2.TextTransparency = 0.6
		Value_2.TextWrapped = true
		Value_2.TextXAlignment = Enum.TextXAlignment.Right

		Description_6.Name = "Description"
		Description_6.Parent = Slider_1
		Description_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Description_6.BackgroundTransparency = 1
		Description_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Description_6.BorderSizePixel = 0
		Description_6.Position = UDim2.new(0.029280778, 0, 0.460235596, 0)
		Description_6.Size = UDim2.new(0, 441, 0, 36)
		Description_6.Font = Enum.Font.SourceSansItalic
		Description_6.Text = description
		Description_6.TextColor3 = Color3.fromRGB(255, 255, 255)
		Description_6.TextSize = 15
		Description_6.TextTransparency = 1
		Description_6.TextXAlignment = Enum.TextXAlignment.Left

		local UIS = game:GetService("UserInputService")
		local TweenService = game:GetService("TweenService")

		local currentValue = min
		local isDragging = false
		local touchID = nil

		local function UpdateSliderPosition()
			local percentage = math.clamp((currentValue - min) / (max - min), 0, 1)
			Value_2.Text = string.format("%.1f"..valueText, currentValue)

			local targetSize = UDim2.new(percentage, 0, 1, 0)
			local tween = TweenService:Create(Draggable_2, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = targetSize})
			tween:Play()
			callback(currentValue)
		end

		local function StartDragging(input)
			isDragging = true
			if input.UserInputType == Enum.UserInputType.Touch then
				touchID = input.UserInputIndex
			end
		end

		local function UpdateDragging(input)
			if not isDragging then return end

			local inputPosition
			if input.UserInputType == Enum.UserInputType.MouseMovement or
				input.UserInputType == Enum.UserInputType.Touch then
				inputPosition = input.Position.X
			end

			if inputPosition then
				local sliderX = SliderBack_2.AbsolutePosition.X
				local sliderWidth = SliderBack_2.AbsoluteSize.X
				local newPercentage = math.clamp((inputPosition - sliderX) / sliderWidth, 0, 1)
				currentValue = min + (newPercentage * (max - min))
				currentValue = math.round(currentValue * 10) / 10
				UpdateSliderPosition()
			end
		end

		local function StopDragging(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				isDragging = false
				touchID = nil
			end
		end

		local function onHover()
			TweenService:Create(Slider_1, TweenInfo.new(0.2), {Size = UDim2.new(0, 455, 0, 68)}):Play()
			TweenService:Create(Description_6, TweenInfo.new(0.2), {TextTransparency = 0.6}):Play()
		end

		local function onUnhover()
			TweenService:Create(Slider_1, TweenInfo.new(0.2), {Size = UDim2.new(0, 455, 0, 37)}):Play()
			TweenService:Create(Description_6, TweenInfo.new(0.2), {TextTransparency = 1}):Play()
		end

		Slider_1.MouseEnter:Connect(onHover)
		Slider_1.MouseLeave:Connect(onUnhover)

		Slider_1.MouseButton1Down:Connect(StartDragging)
		UIS.InputChanged:Connect(UpdateDragging)
		UIS.InputEnded:Connect(StopDragging)

		currentValue = default
		UpdateSliderPosition()
	end
	
	function lib:CreateDropdown(title, TabParent, options, description, callback)
		local Dropdown_1 = Instance.new("ImageButton")
		local UIStroke_24 = Instance.new("UIStroke")
		local UIGradient_15 = Instance.new("UIGradient")
		local UICorner_29 = Instance.new("UICorner")
		local DropTop_2 = Instance.new("Frame")
		local Title_12 = Instance.new("TextLabel")
		local SelectedText_2 = Instance.new("TextLabel")
		local OptionHolder_2 = Instance.new("Frame")
		local UIListLayout_4 = Instance.new("UIListLayout")
		local Description_8 = Instance.new("TextLabel")
	
		Dropdown_1.Name = "Dropdown"
		Dropdown_1.Parent = TabParent
		Dropdown_1.Active = true
		Dropdown_1.AutoButtonColor = false
		Dropdown_1.BackgroundColor3 = Color3.fromRGB(24, 24, 26)
		Dropdown_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Dropdown_1.BorderSizePixel = 0
		Dropdown_1.Position = UDim2.new(0.0299586784, 0, -0.0677419081, 0)
		Dropdown_1.Size = UDim2.new(0, 455, 0, 37)
		Dropdown_1.ZIndex = 1
	
		UIStroke_24.Parent = Dropdown_1
		UIStroke_24.Color = Color3.fromRGB(255, 255, 255)
		UIStroke_24.Thickness = 1.1
	
		UIGradient_15.Parent = UIStroke_24
		UIGradient_15.Color = ColorSequence.new{
			ColorSequenceKeypoint.new(0, Color3.fromRGB(42, 41, 44)),
			ColorSequenceKeypoint.new(1, Color3.fromRGB(42, 41, 44))
		}
		UIGradient_15.Offset = Vector2.new(0.4, 0)
	
		UICorner_29.Parent = Dropdown_1
		UICorner_29.CornerRadius = UDim.new(0, 4)
	
		DropTop_2.Name = "DropTop"
		DropTop_2.Parent = Dropdown_1
		DropTop_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		DropTop_2.BackgroundTransparency = 1
		DropTop_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
		DropTop_2.BorderSizePixel = 0
		DropTop_2.Size = UDim2.new(0, 455, 0, 37)
	
		Title_12.Name = "Title"
		Title_12.Parent = DropTop_2
		Title_12.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Title_12.BackgroundTransparency = 1
		Title_12.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Title_12.BorderSizePixel = 0
		Title_12.Position = UDim2.new(0.029280778, 0, 0.116108254, 0)
		Title_12.Size = UDim2.new(0, 123, 0, 27)
		Title_12.Font = Enum.Font.Gotham
		Title_12.Text = title
		Title_12.TextColor3 = Color3.fromRGB(255, 255, 255)
		Title_12.TextSize = 14
		Title_12.TextTransparency = 0.6
		Title_12.TextXAlignment = Enum.TextXAlignment.Left
	
		SelectedText_2.Name = "SelectedText"
		SelectedText_2.Parent = DropTop_2
		SelectedText_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		SelectedText_2.BackgroundTransparency = 1
		SelectedText_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
		SelectedText_2.BorderSizePixel = 0
		SelectedText_2.Position = UDim2.new(0.849061012, 0, 0.116108663, 0)
		SelectedText_2.Size = UDim2.new(0, 58, 0, 27)
		SelectedText_2.Font = Enum.Font.Gotham
		SelectedText_2.Text = options[1]
		SelectedText_2.TextColor3 = Color3.fromRGB(255, 255, 255)
		SelectedText_2.TextSize = 15
		SelectedText_2.TextTransparency = 0.6
		SelectedText_2.TextXAlignment = Enum.TextXAlignment.Right
	
		OptionHolder_2.Name = "OptionHolder"
		OptionHolder_2.Parent = DropTop_2
		OptionHolder_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		OptionHolder_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
		OptionHolder_2.BorderSizePixel = 0
		OptionHolder_2.Position = UDim2.new(0.894505501, 0, 0.67567569, 0)
		OptionHolder_2.Size = UDim2.new(0, 38, 0, 0)
		OptionHolder_2.Visible = false
		OptionHolder_2.ZIndex = 5
	
		UIListLayout_4.Parent = OptionHolder_2
		UIListLayout_4.HorizontalAlignment = Enum.HorizontalAlignment.Center
		UIListLayout_4.SortOrder = Enum.SortOrder.LayoutOrder
	
		Description_8.Name = "Description"
		Description_8.Parent = Dropdown_1
		Description_8.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Description_8.BackgroundTransparency = 1
		Description_8.BorderColor3 = Color3.fromRGB(0, 0, 0)
		Description_8.BorderSizePixel = 0
		Description_8.Position = UDim2.new(0.029280778, 0, 0.460235596, 0)
		Description_8.Size = UDim2.new(0, 441, 0, 36)
		Description_8.Font = Enum.Font.Gotham
		Description_8.Text = description
		Description_8.TextColor3 = Color3.fromRGB(255, 255, 255)
		Description_8.TextSize = 15
		Description_8.TextTransparency = 1
		Description_8.TextXAlignment = Enum.TextXAlignment.Left
	
		Dropdown_1.MouseEnter:Connect(function()
			game:GetService("TweenService"):Create(Dropdown_1, TweenInfo.new(0.25), {Size = UDim2.new(0, 455, 0, 68)}):Play()
			game:GetService("TweenService"):Create(Description_8, TweenInfo.new(0.25), {TextTransparency = 0.6}):Play()
		end)
	
		Dropdown_1.MouseLeave:Connect(function()
			game:GetService("TweenService"):Create(Dropdown_1, TweenInfo.new(0.25), {Size = UDim2.new(0, 455, 0, 37)}):Play()
			game:GetService("TweenService"):Create(Description_8, TweenInfo.new(0.25), {TextTransparency = 1}):Play()
		end)
	
		local function selectOption(option)
			SelectedText_2.Text = option
			OptionHolder_2.Visible = false
			callback(option)
		end
	
		Dropdown_1.MouseButton1Click:Connect(function()
			OptionHolder_2.Visible = not OptionHolder_2.Visible
			for _, button in ipairs(OptionHolder_2:GetChildren()) do
				if button:IsA("TextButton") then
					game:GetService("TweenService"):Create(button, TweenInfo.new(0.25), {
						BackgroundTransparency = OptionHolder_2.Visible and 0.5 or 1,
						TextTransparency = OptionHolder_2.Visible and 0 or 1
					}):Play()
				end
			end
		end)
	
		for _, option in ipairs(options) do
			local OptionButton_2 = Instance.new("TextButton")
			OptionButton_2.Name = "OptionButton"
			OptionButton_2.Parent = OptionHolder_2
			OptionButton_2.Active = true
			OptionButton_2.AutoButtonColor = false
			OptionButton_2.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			OptionButton_2.BackgroundTransparency = 0.5
			OptionButton_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
			OptionButton_2.BorderSizePixel = 0
			OptionButton_2.Size = UDim2.new(0, 50, 0, 21)
			OptionButton_2.Font = Enum.Font.Gotham
			OptionButton_2.Text = option
			OptionButton_2.TextColor3 = Color3.fromRGB(255, 255, 255)
			OptionButton_2.TextSize = 14
	
			if _ == 1 or _ == #options then
				local UICorner = Instance.new("UICorner")
				UICorner.CornerRadius = UDim.new(0, 3)
				UICorner.Parent = OptionButton_2
			end
	
			OptionButton_2.MouseButton1Click:Connect(function()
				selectOption(option)
			end)
		end
	end	

    function lib:CreateKeybind(title, TabParent, Key, description, callback)
		local KeybindHover_1 = Instance.new("ImageButton")
		local UIStroke_25 = Instance.new("UIStroke")
		local UIGradient_16 = Instance.new("UIGradient")
		local UICorner_30 = Instance.new("UICorner")
		local KeyTop_1 = Instance.new("Frame")
		local Title_13 = Instance.new("TextLabel")
		local SelectedText_3 = Instance.new("TextBox")
		local Description_9 = Instance.new("TextLabel")
	
		KeybindHover_1.Name = "KeybindHover"
		KeybindHover_1.Parent = TabParent
		KeybindHover_1.Active = true
		KeybindHover_1.AutoButtonColor = false
		KeybindHover_1.BackgroundColor3 = Color3.fromRGB(24, 24, 26)
		KeybindHover_1.BorderColor3 = Color3.fromRGB(0, 0, 0)
		KeybindHover_1.BorderSizePixel = 0
		KeybindHover_1.Position = UDim2.new(0.0299586784, 0, -0.0677419081, 0)
		KeybindHover_1.Size = UDim2.new(0, 455, 0, 37)
		KeybindHover_1.ZIndex = 0
	
		UIStroke_25.Parent = KeybindHover_1
		UIStroke_25.Color = Color3.fromRGB(255, 255, 255)
		UIStroke_25.Thickness = 1.1
		UIGradient_16.Parent = UIStroke_25
		UIGradient_16.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(42, 41, 44)), ColorSequenceKeypoint.new(1, Color3.fromRGB(42, 41, 44))}
		UIGradient_16.Offset = Vector2.new(0.4, 0)
	
		UICorner_30.Parent = KeybindHover_1
		UICorner_30.CornerRadius = UDim.new(0, 4)
	
		KeyTop_1.Name = "KeyTop"
		KeyTop_1.Parent = KeybindHover_1
		KeyTop_1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		KeyTop_1.BackgroundTransparency = 1
		KeyTop_1.Size = UDim2.new(0, 455, 0, 37)
	
		Title_13.Name = "Title"
		Title_13.Parent = KeyTop_1
		Title_13.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Title_13.BackgroundTransparency = 1
		Title_13.Position = UDim2.new(0.029, 0, 0.116, 0)
		Title_13.Size = UDim2.new(0, 123, 0, 27)
		Title_13.Font = Enum.Font.Gotham
		Title_13.Text = title
		Title_13.TextColor3 = Color3.fromRGB(255, 255, 255)
		Title_13.TextSize = 14
		Title_13.TextTransparency = 0.6
		Title_13.TextXAlignment = Enum.TextXAlignment.Left
	
		SelectedText_3.Name = "SelectedText"
		SelectedText_3.Parent = KeyTop_1
		SelectedText_3.BackgroundTransparency = 1
		SelectedText_3.Position = UDim2.new(0.849, 0, 0.116, 0)
		SelectedText_3.Size = UDim2.new(0, 58, 0, 27)
		SelectedText_3.Font = Enum.Font.Gotham
		SelectedText_3.Text = "Binded: "..Key
		SelectedText_3.TextColor3 = Color3.fromRGB(255, 255, 255)
		SelectedText_3.TextSize = 17
		SelectedText_3.TextTransparency = 0.6
		SelectedText_3.TextXAlignment = Enum.TextXAlignment.Right
	
		Description_9.Name = "Description"
		Description_9.Parent = KeybindHover_1
		Description_9.BackgroundTransparency = 1
		Description_9.Position = UDim2.new(0.029, 0, 0.460, 0)
		Description_9.Size = UDim2.new(0, 441, 0, 36)
		Description_9.Font = Enum.Font.SourceSansItalic
		Description_9.Text = description
		Description_9.TextColor3 = Color3.fromRGB(255, 255, 255)
		Description_9.TextSize = 15
		Description_9.TextTransparency = 1
		Description_9.TextXAlignment = Enum.TextXAlignment.Left
	
		KeybindHover_1.MouseEnter:Connect(function()
			game:GetService("TweenService"):Create(KeybindHover_1, TweenInfo.new(0.25), {Size = UDim2.new(0, 455, 0, 68)}):Play()
			game:GetService("TweenService"):Create(Description_9, TweenInfo.new(0.25), {TextTransparency = 0.6}):Play()
		end)
	
		KeybindHover_1.MouseLeave:Connect(function()
			game:GetService("TweenService"):Create(KeybindHover_1, TweenInfo.new(0.25), {Size = UDim2.new(0, 455, 0, 37)}):Play()
			game:GetService("TweenService"):Create(Description_9, TweenInfo.new(0.25), {TextTransparency = 1}):Play()
		end)
	
		local keyState
		local currentKey = Key
		local userInputService = game:GetService("UserInputService")
	
		local function onTouchInput(touch)
			if touch.UserInputType == Enum.UserInputType.Touch then
				keyState = not keyState
				callback()
			end
		end
	
		KeybindHover_1.TouchTap:Connect(onTouchInput)
	
		SelectedText_3.FocusLost:Connect(function(enterPressed)
			if enterPressed then
				local inputText = SelectedText_3.Text:upper()
				if #inputText == 1 and inputText:match("%a") then
					currentKey = inputText
					SelectedText_3.Text = "Binded: " .. currentKey
				end
			end
		end)
	
		userInputService.InputBegan:Connect(function(input, isProcessed)
			if not isProcessed then
				local keyEnum = Enum.KeyCode[currentKey]
				if keyEnum and input.KeyCode == keyEnum then
					keyState = not keyState
					callback()
				end
			end
		end)
	end

	function lib:CreateInput(title, TabParent, description, callback)
		local InputHover_1 = Instance.new("ImageButton")
		local UIStroke_26 = Instance.new("UIStroke")
		local UIGradient_18 = Instance.new("UIGradient")
		local UICorner_31 = Instance.new("UICorner")
		local InputTop_1 = Instance.new("Frame")
		local Title_14 = Instance.new("TextLabel")
		local KeyBox_1 = Instance.new("Frame")
		local UIStroke_27 = Instance.new("UIStroke")
		local UICorner_32 = Instance.new("UICorner")
		local KeyInput_1 = Instance.new("TextBox")
		local Description_10 = Instance.new("TextLabel")
		local TweenService = game:GetService("TweenService")

		InputHover_1.Name = "InputHover"
		InputHover_1.Parent = TabParent
		InputHover_1.Active = true
		InputHover_1.AutoButtonColor = false
		InputHover_1.BackgroundColor3 = Color3.fromRGB(24,24,26)
		InputHover_1.BorderColor3 = Color3.fromRGB(0,0,0)
		InputHover_1.BorderSizePixel = 0
		InputHover_1.Position = UDim2.new(0.0299586784, 0, -0.0677419081, 0)
		InputHover_1.Size = UDim2.new(0, 455, 0, 37)

		UIStroke_26.Parent = InputHover_1
		UIStroke_26.Color = Color3.fromRGB(255, 255, 255)
		UIStroke_26.Thickness = 1.1

		UIGradient_18.Parent = UIStroke_26
		UIGradient_18.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(42, 41, 44)), ColorSequenceKeypoint.new(1, Color3.fromRGB(42, 41, 44))}
		UIGradient_18.Offset = Vector2.new(0.4, 0)

		UICorner_31.Parent = InputHover_1
		UICorner_31.CornerRadius = UDim.new(0, 4)

		InputTop_1.Name = "InputTop"
		InputTop_1.Parent = InputHover_1
		InputTop_1.BackgroundColor3 = Color3.fromRGB(255,255,255)
		InputTop_1.BackgroundTransparency = 1
		InputTop_1.BorderColor3 = Color3.fromRGB(0,0,0)
		InputTop_1.BorderSizePixel = 0
		InputTop_1.Size = UDim2.new(0, 455, 0, 37)

		Title_14.Name = "Title"
		Title_14.Parent = InputTop_1
		Title_14.BackgroundColor3 = Color3.fromRGB(255,255,255)
		Title_14.BackgroundTransparency = 1
		Title_14.BorderColor3 = Color3.fromRGB(0,0,0)
		Title_14.BorderSizePixel = 0
		Title_14.Position = UDim2.new(0.029280778, 0, 0.116108254, 0)
		Title_14.Size = UDim2.new(0, 123, 0, 27)
		Title_14.Font = Enum.Font.Gotham
		Title_14.Text = title
		Title_14.TextColor3 = Color3.fromRGB(255, 255, 255)
		Title_14.TextSize = 14
		Title_14.TextTransparency = 0.6
		Title_14.TextXAlignment = Enum.TextXAlignment.Left

		KeyBox_1.Name = "KeyBox"
		KeyBox_1.Parent = InputTop_1
		KeyBox_1.BackgroundColor3 = Color3.fromRGB(255,255,255)
		KeyBox_1.BackgroundTransparency = 1
		KeyBox_1.BorderColor3 = Color3.fromRGB(0,0,0)
		KeyBox_1.BorderSizePixel = 0
		KeyBox_1.Position = UDim2.new(0.849061012, 0, 0.108108111, 0)
		KeyBox_1.Size = UDim2.new(0, 64, 0, 27)

		UIStroke_27.Parent = KeyBox_1
		UIStroke_27.Color = Color3.fromRGB(42, 41, 44)
		UIStroke_27.Thickness = 1.1

		UICorner_32.Parent = KeyBox_1
		UICorner_32.CornerRadius = UDim.new(0, 4)

		KeyInput_1.Name = "KeyInput"
		KeyInput_1.Parent = KeyBox_1
		KeyInput_1.BackgroundColor3 = Color3.fromRGB(255,255,255)
		KeyInput_1.BackgroundTransparency = 1
		KeyInput_1.BorderColor3 = Color3.fromRGB(0,0,0)
		KeyInput_1.BorderSizePixel = 0
		KeyInput_1.Position = UDim2.new(0, 0, 0.00499753607, 0)
		KeyInput_1.Size = UDim2.new(0, 64, 0, 27)
		KeyInput_1.Font = Enum.Font.SourceSansItalic
		KeyInput_1.Text = "Text Input"
		KeyInput_1.TextColor3 = Color3.fromRGB(255, 255, 255)
		KeyInput_1.TextSize = 14
		KeyInput_1.TextTransparency = 0.6
		KeyInput_1.TextWrapped = true
		KeyInput_1.PlaceholderText = "Input Text"

		Description_10.Name = "Description"
		Description_10.Parent = InputHover_1
		Description_10.BackgroundColor3 = Color3.fromRGB(255,255,255)
		Description_10.BackgroundTransparency = 1
		Description_10.BorderColor3 = Color3.fromRGB(0,0,0)
		Description_10.BorderSizePixel = 0
		Description_10.Position = UDim2.new(0.029280778, 0, 0.460235596, 0)
		Description_10.Size = UDim2.new(0, 441, 0, 36)
		Description_10.Font = Enum.Font.SourceSansItalic
		Description_10.Text = description
		Description_10.TextColor3 = Color3.fromRGB(255, 255, 255)
		Description_10.TextSize = 15
		Description_10.TextTransparency = 1
		Description_10.TextXAlignment = Enum.TextXAlignment.Left

		InputHover_1.MouseEnter:Connect(function()
			local TweenIn = TweenService:Create(InputHover_1, TweenInfo.new(0.25), {Size = UDim2.new(0, 455, 0, 68)})
			local TweenText = TweenService:Create(Description_10, TweenInfo.new(0.25), {TextTransparency = 0.6})
			TweenIn:Play()
			TweenText:Play()
		end)

		InputHover_1.MouseLeave:Connect(function()
			local TweenOut = TweenService:Create(InputHover_1, TweenInfo.new(0.25), {Size = UDim2.new(0, 455, 0, 37)})
			local TweenTextOut = TweenService:Create(Description_10, TweenInfo.new(0.25), {TextTransparency = 1})
			TweenOut:Play()
			TweenTextOut:Play()
		end)

		KeyInput_1.FocusLost:Connect(function()
			if callback then
				callback(KeyInput_1.Text)
			end
		end)
	end

	return lib
end

